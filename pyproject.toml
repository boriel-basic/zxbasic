[tool.poetry]
name = "zxbasic"
version = "1.17.2"
description = "Boriel's ZX BASIC Compiler"
authors = ["Jose Rodriguez <boriel@gmail.com>"]
license = "GPL-3.0-or-later"
documentation = "https://zxbasic.readthedocs.io"
repository = "https://github.com/boriel/zxbasic"
homepage = "http://zxbasic.net"
readme = "README.md"

classifiers = [
        'Development Status :: 5 - Production/Stable',
        'Intended Audience :: Developers',
        'Topic :: Software Development :: Build Tools',
        'License :: OSI Approved :: GNU Affero General Public License v3',
        'Programming Language :: Python :: 3.10',
        ]

keywords = ['compiler', 'zxspectrum', 'BASIC', 'z80']  # arbitrary keywords

packages = [
    { include = "src/**/*" }
]

[tool.poetry.scripts]
zxb = 'src.libzxbc.zxb:main'
zxbc = 'src.libzxbc.zxb:main'
zxbasm = 'src.libzxbasm.zxbasm:main'
zxbpp = 'src.libzxbpp.zxbpp:entry_point'

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-timeout = "*"
bump2version = "^1.0.0"
pre-commit = "^2.15.0"
mkdocs = "^1.2.2"
poethepoet = "^0.15.0"
pytest-cov = "*"
ruff = "*"
mypy = "^1.8.0"
pytest-xdist = "*"
setuptools = "^70.1.1"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poe.tasks]
[[tool.poe.tasks.lint]]
help = "Check code style and typing..."
shell = """
    ruff check . &&
    ruff format --check . &&
    mypy .
    """

[[tool.poe.tasks.test]]
help = "Run tests"
shell = "pytest tests"

[[tool.poe.tasks.format]]
help = "Formats code"
shell = """
    ruff check --select I --fix .
    ruff format .
    """

[tool.pytest.ini_options]
minversion = "6.0"
norecursedirs = ["test_*tmp", "runtime"]
addopts = "--cov=. --cov-report term-missing -n auto --dist=loadgroup --color=yes"

[tool.mypy]
check_untyped_defs = true
disable_error_code = [
    "arg-type",
    "assignment",
    "attr-defined",
    "call-overload",
    "has-type",
    "import-not-found",
    "list-item",
    "misc",
    "name-defined",
    "operator",
    "override",
    "return-value",
    "union-attr",
    "var-annotated",
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "C4", "UP"]
ignore = [
    "E713",
    "E722",
    "E731",
    "E741",
    "UP008",
    "UP015",  # KEEP: redundant-open-modes
    "UP024",
    "UP028",
    "UP030",
    "UP031",
    "UP038",
]
